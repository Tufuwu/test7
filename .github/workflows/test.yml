name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', 'nightly', 'pypy3']

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: vakt_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: make deps

    - name: Set up MongoDB
      run: |
        wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu1604-4.2.1.tgz
        tar zxf mongodb-linux-x86_64-ubuntu1604-4.2.1.tgz
        export PATH=${PWD}/mongodb-linux-x86_64-ubuntu1604-4.2.1/bin/:${PATH}
        mongod --version
        mkdir -p data/db
        mongod --dbpath=data/db --fork --logpath /dev/null
        sleep 5
        mongo vakt_db --eval 'db.createUser({user:"test_user",pwd:"test_password",roles:["readWrite"]});'

    - name: Create MySQL Database
      run: mysql -e 'CREATE DATABASE vakt_db CHARACTER SET utf8 COLLATE utf8_bin;'

    - name: Create PostgreSQL Database
      run: psql -c "CREATE DATABASE vakt_db ENCODING='UTF8';" -U postgres

    - name: Run tests with coverage
      env:
        DATABASE_DSN: "mysql+pymysql://root@127.0.0.1/vakt_db"
      run: make coverage

    - name: Test SQL integration for SQLite
      env:
        DATABASE_DSN: "sqlite:///:memory:"
      run: make test-sql-i

    - name: Test SQL integration for Postgres
      env:
        DATABASE_DSN: "postgresql+psycopg2cffi://postgres:@localhost/vakt_db"
      run: make test-sql-i

    - name: Run performance tests
      run: make bench

    - name: Upload coverage to Codecov
      run: bash <(curl -s https://codecov.io/bash)
